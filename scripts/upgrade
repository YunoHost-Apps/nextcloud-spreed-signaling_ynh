#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app" --action="stop"
ynh_systemctl --service="janus" --action="stop"
ynh_systemctl --service="nats-server" --action="stop"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
#ynh_script_progression "Ensuring downward compatibility..."

### N.B. : the following setting migration snippets are provided as *EXAMPLES*
### of what you may want to do in some cases (e.g. a setting was not defined on
### some legacy installs and you therefore want to initiaze stuff during upgrade)

# If db_name doesn't exist, create it
# ynh_app_setting_set_default --key=db_name --value="$(ynh_sanitize_dbid --db_name=$app)"

# If install_dir doesn't exist, create it
# ynh_app_setting_set_default --key=install_dir --value="/var/www/$app"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from manifest.toml
ynh_setup_source --dest_dir="$install_dir" --full_replace

chown -R "$app:$app" "$install_dir"

#=================================================
# BUILD
#=================================================
ynh_script_progression "Building go nextcloud signaling server..."

ynh_go_install
chmod u+x /etc/profile.d/goenv.sh
/etc/profile.d/goenv.sh

GOCACHE=/opt/goenv/cache
export GOCACHE
pushd $install_dir
make build
popd
ynh_go_remove
chown -R "$app:$app" "$install_dir"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating $app's configuration files..."

# Signaling server
mkdir -p /etc/$app/
ynh_config_add --jinja --template="server.conf" --destination="/etc/$app/server.conf"
chmod -R 400 "/etc/$app"
chmod u+x "/etc/$app"
chown -R "$app:$app" "/etc/$app"

# Janus
ynh_config_add --template="janus.jcfg" --destination="/etc/janus/janus.jcfg"
ynh_config_add --template="janus.transport.http.jcfg" --destination="/etc/janus/janus.transport.http.jcfg"
ynh_config_add --template="janus.transport.websockets.jcfg" --destination="/etc/janus/janus.transport.websockets.jcfg"

chmod -R 400 "/etc/janus"

# Nats-server
ynh_config_add --template="nats-server.conf" --destination="/etc/nats-server.conf"
chmod -R 400 "/etc/nats-server.conf"
chown -R "nats:nats" "/etc/nats-server.conf"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."


ynh_config_add_nginx

ynh_config_add_systemd

yunohost service add "janus" --description="Janus server for nextcloud talk"
yunohost service add "nats-server" --description="Nats server for nextcloud talk"
yunohost service add "$app" --description="Signaling server for nextcloud talk" --log="/var/log/$app/$app.log"

ynh_config_add_logrotate

#ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="janus" --action="start"
ynh_systemctl --service="nats-server" --action="start"
ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
